{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentId": {
            "type": "String",
            "metadata": {
                "description": "Suffix added to all resource names to make them unique. Use a maximum of 3 random characters. Four or more characters will be ignored."
            }
        }
    },
    "variables": {
        
        "sqlAdministratorLogin": "asa.sql.admin",
        "workspaceName": "[concat('asaworkspace', parameters('deploymentId'))]",
        "adlsStorageAccountName": "[concat('asadatalake', parameters('deploymentId'))]",
        "defaultDataLakeStorageFilesystemName": "defaultfs",
        "sparkComputeName": "SparkPool01",
        "primary_region": "East US",
        "computeSubnetId": "",
        "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
        "defaultDataLakeStorageAccountUrl": "[concat('https://', variables('adlsStorageAccountName'), '.dfs.core.windows.net')]",
        "sparkAutoScaleEnabled": "true",
        "sparkMinNodeCount": "3",
        "sparkMaxNodeCount": "4",
        "sparkNodeCount": "0",
        "sparkNodeSizeFamily": "MemoryOptimized",
        "sparkNodeSize": "Small",
        "sparkAutoPauseEnabled": "true",
        "sparkAutoPauseDelayInMinutes": "15",
        "sparkVersion": "2.4"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('adlsStorageAccountName')]",
            "location": "[variables('primary_region')]",
            "dependsOn": [],
            "tags": {},
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": "true",
                "isHnsEnabled": "true",
                "largeFileSharesState": "Disabled"
            },
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "name": "[concat('default/', variables('defaultDataLakeStorageFilesystemName'))]",
                    "dependsOn": [
                        "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'))]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('adlsStorageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('adlsStorageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2019-06-01-preview",
            "name": "[variables('workspaceName')]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('adlsStorageAccountName'), '/blobServices/default/containers/', variables('defaultDataLakeStorageFilesystemName'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
                    "filesystem": "[variables('defaultDataLakeStorageFilesystemName')]"
                },
                "virtualNetworkProfile": {
                    "computeSubnetId": "[variables('computeSubnetId')]"
                },
                "sqlAdministratorLogin": "[variables('sqlAdministratorLogin')]"
            },
            "resources": [
                {
                    "type": "firewallrules",
                    "apiVersion": "2019-06-01-preview",
                    "name": "allowAll",
                    "location": "[variables('primary_region')]",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
                    ],
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers/providers/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[concat(variables('adlsStorageAccountName'), '/default/', variables('defaultDataLakeStorageFilesystemName'), '/Microsoft.Authorization/',  guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'))))]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(concat(resourceGroup().id, '/', variables('storageBlobDataContributorRoleID'), '/', variables('workspaceName'), '2'))]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleID'))]",
                "principalId": "[reference(concat('Microsoft.Synapse/workspaces/', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(variables('workspaceName'), '/', variables('sparkComputeName'))]",
            "location": "[variables('primary_region')]",
            "dependsOn": [
                "[concat('Microsoft.Synapse/workspaces/', variables('workspaceName'))]"
            ],
            "properties": {
                "nodeCount": "[variables('sparkNodeCount')]",
                "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
                "nodeSize": "[variables('sparkNodeSize')]",
                "autoScale": {
                    "enabled": "[variables('sparkAutoScaleEnabled')]",
                    "minNodeCount": "[variables('sparkMinNodeCount')]",
                    "maxNodeCount": "[variables('sparkMaxNodeCount')]"
                },
                "autoPause": {
                    "enabled": "[variables('sparkAutoPauseEnabled')]",
                    "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
                },
                "sparkVersion": "[variables('sparkVersion')]"
            }
        },
        {
          "apiVersion": "2015-01-01",
          "type": "Microsoft.Resources/deployments",
          "name": "UpdateSparkPool01",
          "dependsOn": [
            "[resourceId('Microsoft.Synapse/workspaces/bigDataPools', variables('workspaceName'), variables('sparkComputeName'))]"

          ],
          "properties":{
            "mode": "Incremental",
            "parameters": {},
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {},
              "variables": {},
              "resources": [
              {
                  "type": "Microsoft.Synapse/workspaces/bigDataPools",
                  "apiVersion": "2019-06-01-preview",
                  "name": "[concat(variables('workspaceName'), '/', variables('sparkComputeName'))]",
                  "location": "[variables('primary_region')]",
                  "properties": {
                    "nodeCount": "[variables('sparkNodeCount')]",
                    "nodeSizeFamily": "[variables('sparkNodeSizeFamily')]",
                    "nodeSize": "[variables('sparkNodeSize')]",
                    "autoScale": {
                      "enabled": "[variables('sparkAutoScaleEnabled')]",
                      "minNodeCount": "[variables('sparkMinNodeCount')]",
                      "maxNodeCount": "[variables('sparkMaxNodeCount')]"
                    },
                    "autoPause": {
                      "enabled": "[variables('sparkAutoPauseEnabled')]",
                      "delayInMinutes": "[variables('sparkAutoPauseDelayInMinutes')]"
                    },
                    "sparkVersion": "[variables('sparkVersion')]"
                  }
                }
              ]
            }
          }
        }
       
      
       
    ]
}
