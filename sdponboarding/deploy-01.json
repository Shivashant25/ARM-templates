{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
        "vmAdminUsername": {
      "type": "string"
    },
    "vmAdminPassword": {
      "type": "SecureString"
    },
    "trainerUserName": {
      "type": "string"
    },
    "trainerUserPassword": {
      "type": "string"
    },
    "AzureUserName": {
      "type": "string"
    },
    "AzurePassword": {
      "type": "securestring"
    },        
    "deploymentID": {
      "type": "String"
    }
  },
  "variables": {
    "cloudlabsCommon": "[concat(' -AzureUserName ', parameters('AzureUserName'), ' -AzurePassword ', parameters('AzurePassword'), ' -AzureTenantID ', variables('AzureTenantID'), ' -AzureSubscriptionID ', variables('AzureSubscriptionID'), ' -ODLID ', parameters('ODLID'), ' -DeploymentID ', parameters('DeploymentID'), ' -InstallCloudLabsShadow ', parameters('InstallCloudLabsShadow'), ' -vmAdminPassword ', parameters('vmAdminPassword'), ' ', '-AppID', ' ',parameters('AppID'), ' ', '-AppSecret', ' ',parameters('AppSecret'))]",
    "Enable-CloudLabsEmbeddedShadow": "[concat(' -vmAdminUsername ', parameters('vmAdminUsername'), ' -trainerUserName ', parameters('trainerUserName'), ' -trainerUserPassword ', parameters('trainerUserPassword'))]",    
    "databaseServerName": "[concat('azuresqldbserverdemo1', parameters('deploymentID'))]",
    "databaseName": "AzureSQLDB1",
    "azureTenantID": "[subscription().tenantId]",
    "azureSubscriptionID": "[subscription().subscriptionId]",
    "resourceGroupName": "[resourceGroup().name]",
    "location": "[resourceGroup().location]",
   
    "virtualMachineSize": "Standard_D4s_v3",
    "vmPublicIpDnsName": "[concat('labvm', parameters('deploymentID'))]",

    "apiVersion": "[providers('Microsoft.ServiceBus', 'namespaces').apiVersions[0]]",
    "subnetPrefix": "10.0.0.0/24",
    "addressPrefix": "10.0.0.0/16",
    "resourceType": "queues",
    "virtualNetworkName": "sqldemoextension-vnet",
    "SubnetName": "JumpSubnet",
    "queuepolicy": "sb-queue-policy",
    "policy": "ManagePolicy",
    "conectionName": "servicebus",
    "AuthorizationRuleName": "sb-queue-policy",
    "public-ip-address-name": "bastion-public-ip",
    "storageAccountName": "[format('sqlvas{0}', parameters('deploymentID'))]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "bastion-subnet-name": "AzureBastionSubnet",
    "bastion-subnet-ip-prefix": "10.0.1.0/26"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'vm2nsg')]"
              }
            }
          },
          {
            "name": "AzureBastionSubnet",
            "properties": {
                "addressPrefix": "[variables('bastion-subnet-ip-prefix')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'vm2nsg')]"
                }
            }
        }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'vm2nsg')]"
      ]
    },
    {
      "apiVersion": "2020-07-01",
      "type": "Microsoft.Network/bastionHosts",
      "name": "SQLExtensionDemo-vnet-bastion",
      "location": "[variables('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.Network/publicIpAddresses', variables('public-ip-address-name'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      
      ],
      "properties": {
          "ipConfigurations": [
              {
                  "name": "IpConf",
                  "properties": {
                      "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('bastion-subnet-name'))]"
                      },
                      "publicIPAddress": {
                          "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('public-ip-address-name'))]"
                      }
                  }
              }
          ]
      }
  },
  {
    "apiVersion": "2020-07-01",
    "type": "Microsoft.Network/publicIpAddresses",
    "name": "[variables('public-ip-address-name')]",
    "location": "[variables('location')]",
    "sku": {
        "name": "Standard"
    },
    "properties": {
        "publicIPAllocationMethod": "Static"
    }
},

    
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
 
   
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "name": "vm2pip",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIpAllocationMethod": "Dynamic"
       
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-06-01",
      "name": "vm2nsg",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowHttpsInBound",
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "Internet",
                "destinationPortRange": "443",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound"
            }
        },
        
        {
            "name": "AllowGatewayManagerInBound",
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "GatewayManager",
                "destinationPortRange": "443",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 111,
                "direction": "Inbound"
            }
        },
        {
            "name": "AllowLoadBalancerInBound",
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationPortRange": "443",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound"
            }
        },
        {
            "name": "AllowBastionHostCommunicationInBound",
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationPortRanges": [
                    "8080",
                    "5701"
                ],
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound"
            }
        },
        {
            "name": "DenyAllInBound",
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationPortRange": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Inbound"
            }
        },
        {
            "name": "AllowSshRdpOutBound",
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationPortRanges": [
                    "22",
                    "3389"
                ],
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 100,
                "direction": "Outbound"
            }
        },
        {
            "name": "AllowAzureCloudCommunicationOutBound",
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationPortRange": "443",
                "destinationAddressPrefix": "AzureCloud",
                "access": "Allow",
                "priority": 110,
                "direction": "Outbound"
            }
        },
        {
            "name": "AllowBastionHostCommunicationOutBound",
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationPortRanges": [
                    "8080",
                    "5701"
                ],
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 120,
                "direction": "Outbound"
            }
        },
        {
            "name": "AllowGetSessionInformationOutBound",
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "destinationPortRanges": [
                    "80",
                    "443"
                ],
                "access": "Allow",
                "priority": 130,
                "direction": "Outbound"
            }
        },
        {
            "name": "DenyAllOutBound",
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Deny",
                "priority": 1000,
                "direction": "Outbound"
            },
            "name": "default-allow-rdp",
            "properties": {
              "priority": 110,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
          
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "name": "vm2nic",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', 'vm2pip')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', 'vm2nsg')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', 'vm2pip')]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', 'vm2nsg')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "VM2",
      "apiVersion": "2019-07-01",
      "location": "[variables('location')]",
      "tags": {},
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "id": "/subscriptions/269ad598-b69b-4ce2-a696-8217033b1690/resourceGroups/cloudlabs-mgmt/providers/Microsoft.Compute/galleries/sqlvmdemoextension/images/VM2/versions/0.0.1"
          },
          "osDisk": {
            "createOption": "fromImage",
            "name": "[concat('VM2','OSDisk')]",
            "diskSizeGB": 128,
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'vm2nic')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'vm2nic')]"
      ]
    },
     
    {
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2019-02-01",
      "name": "vm1pip",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIpAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('vmPublicIpDnsName')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-06-01",
      "name": "vm1nsg",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 110,
              "protocol": "TCP",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "name": "vm1nic",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', 'vm1pip')]",
        "[concat('Microsoft.Network/networkSecurityGroups/', 'vm1nsg')]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', 'vm1pip')]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', 'vm1nsg')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "VM1",
      "apiVersion": "2019-07-01",
      "location": "[variables('location')]",
      "tags": {},
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "id": "/subscriptions/269ad598-b69b-4ce2-a696-8217033b1690/resourceGroups/cloudlabs-mgmt/providers/Microsoft.Compute/galleries/sqlvmdemoextension/images/VM1/versions/0.0.1"
          },
          "osDisk": {
            "createOption": "fromImage",
            "name": "[concat('VM1','OSDisk')]",
            "diskSizeGB": 128,
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'vm1nic')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'vm1nic')]"
      ],
      "resources": [
        {
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "apiVersion": "2015-06-15",
          "name": "[concat('VM1','/', 'winExtension')]",
          "location": "[variables('location')]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', 'VM1')]",
            "[concat('Microsoft.Compute/virtualMachines/', 'VM2')]",
            "[concat('Microsoft.Compute/virtualMachines/', 'SQLVM1')]",
            "[concat('Microsoft.Compute/virtualMachines/', 'SQLVM2')]"
          ],
          "tags": {
            "displayName": "VM Extension"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "https://experienceazure.blob.core.windows.net/templates/cloudlabs-common/cloudlabs-windows-functions.ps1",
                "https://raw.githubusercontent.com/shivashant25/ARM-templates/main/sdponboarding/psscript01.ps1"
              ]
            },
            "protectedSettings": {
              "commandToExecute": "[concat('powershell.exe -ExecutionPolicy ByPass -File psscript01.ps1', variables('cloudlabsCommon'), variables('Enable-CloudLabsEmbeddedShadow'))]"
            }
          }
        }
      ]    
    }
 ,
  
 {
  "type": "Microsoft.Network/publicIpAddresses",
  "apiVersion": "2019-02-01",
  "name": "sqlvm1pip",
  "location": "[variables('location')]",
  "sku": {
    "name": "Basic"
  },
  "properties": {
    "publicIpAllocationMethod": "Dynamic"
  }
},
{
  "type": "Microsoft.Network/networkSecurityGroups",
  "apiVersion": "2017-06-01",
  "name": "sqlvm1nsg",
  "location": "[variables('location')]",
  "properties": {
    "securityRules": [
      {
        "name": "default-allow-rdp",
        "properties": {
          "priority": 110,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "3389"
        }
      }
    ]
  }
},
{
  "type": "Microsoft.Network/networkInterfaces",
  "apiVersion": "2016-09-01",
  "name": "sqlvm1nic",
  "location": "[variables('location')]",
  "dependsOn": [
    "[concat('Microsoft.Network/publicIpAddresses/', 'sqlvm1pip')]",
    "[concat('Microsoft.Network/networkSecurityGroups/', 'sqlvm1nsg')]",
    "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
  ],
  "properties": {
    "ipConfigurations": [
      {
        "name": "ipconfig1",
        "properties": {
          "subnet": {
            "id": "[variables('subnetRef')]"
          },
          "privateIPAllocationMethod": "Dynamic",
          "publicIpAddress": {
            "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', 'sqlvm1pip')]"
          },
          "subnet": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
          }
        }
      }
    ],
    "networkSecurityGroup": {
      "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', 'sqlvm1nsg')]"
    }
  }
},
{
  "type": "Microsoft.Compute/virtualMachines",
  "name": "SQLVM1",
  "apiVersion": "2019-07-01",
  "location": "[variables('location')]",
  "tags": {},
  "properties": {
    "hardwareProfile": {
      "vmSize": "[variables('virtualMachineSize')]"
    },
    "storageProfile": {
      "imageReference": {
        "id": "/subscriptions/269ad598-b69b-4ce2-a696-8217033b1690/resourceGroups/cloudlabs-mgmt/providers/Microsoft.Compute/galleries/sqlvmdemoextension/images/SQLVM1/versions/0.0.1"
      },
      "osDisk": {
        "createOption": "fromImage",
        "name": "[concat('SQLVM1','OSDisk')]",
        "diskSizeGB": 128,
        "managedDisk": {
          "storageAccountType": "Standard_LRS"
        }
      }
    },
    "networkProfile": {
      "networkInterfaces": [
        {
          "id": "[resourceId('Microsoft.Network/networkInterfaces/', 'sqlvm1nic')]"
        }
      ]
    }
  },
  "dependsOn": [
    "[resourceId('Microsoft.Network/networkInterfaces/', 'sqlvm1nic')]"
  ]
}
,

{
  "type": "Microsoft.Network/publicIpAddresses",
  "apiVersion": "2019-02-01",
  "name": "SQLVM2PIP",
  "location": "[variables('location')]",
  "sku": {
    "name": "Basic"
  },
  "properties": {
    "publicIpAllocationMethod": "Dynamic"
  }
},
{
  "type": "Microsoft.Network/networkSecurityGroups",
  "apiVersion": "2017-06-01",
  "name": "SQLVM2NSG",
  "location": "[variables('location')]",
  "properties": {
    "securityRules": [
      {
        "name": "default-allow-rdp",
        "properties": {
          "priority": 110,
          "protocol": "TCP",
          "access": "Allow",
          "direction": "Inbound",
          "sourceAddressPrefix": "*",
          "sourcePortRange": "*",
          "destinationAddressPrefix": "*",
          "destinationPortRange": "3389"
        }
      }
    ]
  }
},
{
  "type": "Microsoft.Network/networkInterfaces",
  "apiVersion": "2016-09-01",
  "name": "SQLVM2nic",
  "location": "[variables('location')]",
  "dependsOn": [
    "[concat('Microsoft.Network/publicIpAddresses/', 'SQLVM2pip')]",
    "[concat('Microsoft.Network/networkSecurityGroups/', 'SQLVM2nsg')]",
    "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
  ],
  "properties": {
    "ipConfigurations": [
      {
        "name": "ipconfig1",
        "properties": {
          "subnet": {
            "id": "[variables('subnetRef')]"
          },
          "privateIPAllocationMethod": "Dynamic",
          "publicIpAddress": {
            "id": "[resourceId(resourceGroup().name,'Microsoft.Network/publicIpAddresses', 'SQLVM2pip')]"
          },
          "subnet": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
          }
        }
      }
    ],
    "networkSecurityGroup": {
      "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', 'SQLVM2nsg')]"
    }
  }
},
{
  "type": "Microsoft.Compute/virtualMachines",
  "name": "SQLVM2",
  "apiVersion": "2019-07-01",
  "location": "[variables('location')]",
  "tags": {},
  "properties": {
    "hardwareProfile": {
      "vmSize": "[variables('virtualMachineSize')]"
    },
    "storageProfile": {
      "imageReference": {
        "id": "/subscriptions/269ad598-b69b-4ce2-a696-8217033b1690/resourceGroups/cloudlabs-mgmt/providers/Microsoft.Compute/galleries/sqlvmdemoextension/images/SQLVM2/versions/0.0.1"
      },
      "osDisk": {
        "createOption": "fromImage",
        "name": "[concat('SQLVM2','OSDisk')]",
        "diskSizeGB": 128,
        "managedDisk": {
          "storageAccountType": "Standard_LRS"
        }
      }
    },
    "networkProfile": {
      "networkInterfaces": [
        {
          "id": "[resourceId('Microsoft.Network/networkInterfaces', 'SQLVM2nic')]"
        }
      ]
    }
  },
  "dependsOn": [
    "[resourceId('Microsoft.Network/networkInterfaces', 'SQLVM2nic')]"
  ]
},

{
  "type": "Microsoft.OperationalInsights/workspaces",
  "apiVersion": "2021-12-01-preview",
  "name": "SQLIaaSLAWS",
  "location": "[variables('location')]",
  
  "properties": {
      "sku": {
          "name": "pergb2018"
      },
      "retentionInDays": 30,
      "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
      },
      "workspaceCapping": {
          "dailyQuotaGb": -1
      },
      "publicNetworkAccessForIngestion": "Enabled",
      "publicNetworkAccessForQuery": "Enabled"
  }
},
{
  "type": "Microsoft.Sql/servers",
  "apiVersion": "2021-02-01-preview",
  "name": "[variables('databaseServerName')]",
  "location": "[variables('location')]",
  "properties": {
    "administratorLogin": "Admin123",
    "administratorLoginPassword": "SuperStrong@1",
    "version": "12.0",
    "minimalTlsVersion": "1.2",
    "publicNetworkAccess": "Enabled",
    "restrictOutboundNetworkAccess": "Disabled"
  },
  "resources": [
  
    {
      "name": "AllowAllMicrosoftAzureIps",
      "type": "firewallrules",
      "apiVersion": "2014-04-01",
      "location": "[variables('location')]",
      "properties": {
        "endIpAddress": "0.0.0.0",
        "startIpAddress": "0.0.0.0"
      },
      "dependsOn": [
        "[variables('databaseServerName')]"
      ]
    }
  ]
},


{
  "type": "Microsoft.Sql/servers/databases",
  "apiVersion": "2021-02-01-preview",
  "name": "[concat(string(variables('databaseServerName')), '/', string('AzureSQLDB1'))]",
  "location": "[variables('location')]",
  "dependsOn": [
    "[concat('Microsoft.Sql/servers/', variables('databaseServerName'))]"
  ],
  "sku": {
    "name": "GP_Gen5",
    "tier": "GeneralPurpose",
    "family": "Gen5",
    "capacity": 2
},
"kind": "v12.0,user,vcore",
  "properties": {
    "collation": "SQL_Latin1_General_CP1_CI_AS",
    "maxSizeBytes": 34359738368,
    "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
    "zoneRedundant": false,
    "licenseType": "LicenseIncluded",
    "readScale": "Disabled",
    "requestedBackupStorageRedundancy": "Local",
    "isLedgerOn": false
  },
  "resources": [
    {
      "type": "extensions",
      "apiVersion": "2014-04-01",
      "name": "Import",
      "dependsOn": [
        "[variables('databaseName')]"  ],
      "properties": {
        
        "storageKeyType": "StorageAccessKey",
        "storageKey":  "7yf+h/aJ8mCvOstNctdflr/hP4tL3vn9JWJi/+KpyOzEin6c3NEOUWE9sIRd57Eo0F+QjVarag7c+AStmF0jwg==",
        "storageUri": "https://sqldemostorageacnt.blob.core.windows.net/sql/AzureSQLDB1.bacpac",
        "administratorLogin": "Admin123",
        "administratorLoginPassword": "SuperStrong@1",
        "operationMode": "Import"
      }
    }
  ]
}
  ],
  "outputs": {
    "DeploymentID": {
      "type": "string",
      "value": "[ parameters('deploymentID')]"
    },
    "VM Admin Username": {
      "type": "string",
      "value": "Admin123"
    },
    "VM Admin Password": {
      "type": "string",
      "value": "SuperStrong@1"
    },
    "SQL Admin Username": {
      "type": "string",
      "value": "Admin123"
    },
    "SQL Admin Password": {
      "type": "string",
      "value": "SuperStrong@1"
    }
  }
}
